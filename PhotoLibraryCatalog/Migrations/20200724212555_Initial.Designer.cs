// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TuroPhoto.PhotoLibraryCatalog.Infrastructure.Repository;

namespace TuroPhoto.PhotoLibraryCatalog.Migrations
{
    [DbContext(typeof(TuroPhotoContext))]
    [Migration("20200724212555_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TuroPhoto.PhotoLibraryCatalog.Model.LibraryCatalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("DirectoryPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LibraryCatalog");
                });

            modelBuilder.Entity("TuroPhoto.PhotoLibraryCatalog.Model.LibraryCatalogDirectory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LibraryCatalogId")
                        .HasColumnType("int");

                    b.Property<string>("RelativePath")
                        .HasColumnName("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LibraryCatalogId");

                    b.ToTable("LibraryCatalogDirectory");
                });

            modelBuilder.Entity("TuroPhoto.PhotoLibraryCatalog.Model.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeFromFile")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LibraryCatalogDirectoryId")
                        .HasColumnType("int");

                    b.Property<int?>("LibraryCatalogId")
                        .HasColumnType("int");

                    b.Property<string>("SourceFileName")
                        .HasColumnName("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LibraryCatalogDirectoryId");

                    b.HasIndex("LibraryCatalogId");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("TuroPhoto.PhotoLibraryCatalog.Model.LibraryCatalogDirectory", b =>
                {
                    b.HasOne("TuroPhoto.PhotoLibraryCatalog.Model.LibraryCatalog", null)
                        .WithMany("Directories")
                        .HasForeignKey("LibraryCatalogId");
                });

            modelBuilder.Entity("TuroPhoto.PhotoLibraryCatalog.Model.Photo", b =>
                {
                    b.HasOne("TuroPhoto.PhotoLibraryCatalog.Model.LibraryCatalogDirectory", null)
                        .WithMany("Photos")
                        .HasForeignKey("LibraryCatalogDirectoryId");

                    b.HasOne("TuroPhoto.PhotoLibraryCatalog.Model.LibraryCatalog", null)
                        .WithMany("Photos")
                        .HasForeignKey("LibraryCatalogId");

                    b.OwnsOne("TuroPhoto.PhotoLibraryCatalog.Model.ImageMetaData", "ImageMetaData", b1 =>
                        {
                            b1.Property<int>("PhotoId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime?>("DateTime")
                                .HasColumnName("DateTimeFromMetaData")
                                .HasColumnType("datetime2");

                            b1.HasKey("PhotoId");

                            b1.ToTable("Photo");

                            b1.WithOwner()
                                .HasForeignKey("PhotoId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
